intTable(packageName,primitiveType,objectType) ::= <<
package <packageName>;

import java.util.ArrayList;
import java.util.Collections;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;

public class <primitiveType>Table
{
   // =============== Fields ===============

   private String columnName;
   private List\<List\<Object>\> table = new ArrayList\<>();
   private Map\<String, Integer> columnMap = new LinkedHashMap\<>();

   // =============== Constructors ===============

   public <primitiveType>Table(<objectType>... start)
   {
      this.columnName = "A";
      this.columnMap.put(this.columnName, 0);
      for (<objectType> current : start)
      {
         List\<Object> row = new ArrayList\<>();
         row.add(current);
         this.table.add(row);
      }
   }

   // =============== Properties ===============

   public String getColumnName()
   {
      return this.columnName;
   }

   public void setColumnName(String columnName)
   {
      this.columnName = columnName;
   }

   public List\<List\<Object>\> getTable()
   {
      return this.table;
   }

   public void setTable(List\<List\<Object>\> table)
   {
      this.table = table;
   }

   public void setColumnMap(Map\<String, Integer> columnMap)
   {
      this.columnMap = columnMap;
   }

   // =============== Methods ===============

   public <primitiveType> sum()
   {
      int column = this.columnMap.get(this.columnName);
      <primitiveType> result = 0;
      for (List\<Object> row : this.table)
      {
         result += (<objectType>) row.get(column);
      }
      return result;
   }

   public <primitiveType> min()
   {
      int column = this.columnMap.get(this.columnName);
      <primitiveType> result = <objectType>.MAX_VALUE;
      for (List\<Object> row : this.table)
      {
         <primitiveType> value =  (<objectType>) row.get(column);
         if (value \< result)
         {
            result = value;
         }
      }
      return result;
   }

   public <primitiveType> max()
   {
      int column = this.columnMap.get(this.columnName);
      <primitiveType> result = <objectType>.MIN_VALUE;
      for (List\<Object> row : this.table)
      {
         <primitiveType> value =  (<objectType>) row.get(column);
         if (value > result)
         {
            result = value;
         }
      }
      return result;
   }

   public <primitiveType> median()
   {
      List\<<objectType>\> list = this.toList();
      Collections.sort(list);
      int index = list.size() / 2;
      return list.get(index);
   }

   public List\<<objectType>\> toList()
   {
      int column = this.columnMap.get(this.columnName);
      List\<<objectType>\> result = new ArrayList\<>();
      for (List\<Object> row : this.table)
      {
         <primitiveType> value =  (<objectType>) row.get(column);
         result.add(value);
      }
      return result;
   }

   @Override
   public String toString()
   {
      StringBuilder buf = new StringBuilder();
      for (String key : this.columnMap.keySet())
      {
         buf.append(key).append(" \t");
      }
      buf.append("\n");
      for (List\<Object> row : this.table)
      {
         for (Object cell : row)
         {
            buf.append(cell).append(" \t");
         }
         buf.append("\n");
      }
      buf.append("\n");
      return buf.toString();
   }
}
>>
