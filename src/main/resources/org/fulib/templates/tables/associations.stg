expandMethod(roleName, toMany, className, otherClassName) ::= <<
   public <otherClassName>Table expand<roleName; format="cap">(String... rowName)
   {
      <otherClassName>Table result = new <otherClassName>Table();
      result.setColumnMap(this.columnMap);
      result.setTable(this.table);
      int newColumnNumber = this.table.isEmpty() ? 0 : this.table.get(0).size();

      String newColumnName = rowName != null && rowName.length > 0 ? rowName[0] : "" + ((char)('A' + newColumnNumber));
      result.setColumnName(newColumnName);
      this.columnMap.put(newColumnName, newColumnNumber);

      int column = this.getColumn();
      List\<List\<Object>\> oldTable = new ArrayList\<>(this.table);
      this.table.clear();
      for (List\<Object> row : oldTable)
      {
         <className> start = (<className>) row.get(column);
         <if(toMany)>
         for (<otherClassName> current : start.get<roleName; format="cap">())
         {
            List\<Object> newRow = new ArrayList\<>(row);
            newRow.add(current);
            this.table.add(newRow);
         }
         <else>
         List\<Object> newRow = new ArrayList\<>(row);
         newRow.add(start.get<roleName; format="cap">());
         this.table.add(newRow);
         <endif>
      }
      return result;
   }
>>

hasMethod(roleName, toMany, className, otherClassName) ::= <<
   public <className>Table has<roleName; format="cap">(<otherClassName>Table rowName)
   {
      int column = this.getColumn();
      int otherColumn = this.columnMap.get(rowName.getColumnName());
      List\<List\<Object>\> oldTable = new ArrayList\<>(this.table);
      this.table.clear();
      for (List\<Object> row : oldTable)
      {
         <className> start = (<className>) row.get(column);
         <otherClassName> other = (<otherClassName>) row.get(otherColumn);
         <if(toMany)>
         if (start.get<roleName; format="cap">().contains(other))
         <else>
         if (start.get<roleName; format="cap">() == other)
         <endif>
         {
            this.table.add(row);
         }
      }
      return this;
   }
>>
