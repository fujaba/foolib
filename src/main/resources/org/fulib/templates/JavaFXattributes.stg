attrDecl(type, name, value) ::= <<
   private <type>Property <name> = _init<name; format="cap">();
>>

init(v) ::= "<if(v)> = <v><endif>"

initMethod(type, name) ::= <<
   private <type>Property _init<name; format="cap">()
   {
      <type>Property result = new Simple<type>Property();
      result.addListener((observable, oldValue, newValue) -> firePropertyChange("<name>", oldValue, newValue));
      return result;
   }
>>

propertyDecl(name) ::= <<
   public static final String PROPERTY_<name> = "<name>";
>>

attrGet(name, type) ::= <<
   public <type> get<name; format="cap">()
   {
      return <name>.getValue();
   }
>>

attrSet(class, name, type, useEquals) ::= <<
   public <class> set<name; format="cap">(<type> value)
   {
      this.<name>.setValue(value);
      return this;
   }
>>

propertyGet(type, name) ::= <<
   public <type>Property <name>Property()
   {
      return <name>;
   }
>>

condition(name, type, useEquals) ::= <%
<if(useEquals)>value == null ? this.<name> != null : ! value.equals(this.<name>)
<else>
value != this.<name>
<endif>
%>
