propertyChangeSignatures() ::= <<
   listenersField:                  attribute:listeners
   firePropertyChange:              method:firePropertyChange(String,Object,Object)
   addPropertyChangeListener1:      method:addPropertyChangeListener(PropertyChangeListener)
   addPropertyChangeListener2:      method:addPropertyChangeListener(String,PropertyChangeListener)
   removePropertyChangeListener1:   method:removePropertyChangeListener(PropertyChangeListener)
   removePropertyChangeListener2:   method:removePropertyChangeListener(String,PropertyChangeListener)
>>

listenersField() ::= <<
   protected PropertyChangeSupport listeners;
>>

addPropertyChangeListener1() ::= <<
   public boolean addPropertyChangeListener(PropertyChangeListener listener)
   {
      if (this.listeners == null)
      {
         this.listeners = new PropertyChangeSupport(this);
      }
      this.listeners.addPropertyChangeListener(listener);
      return true;
   }
>>

addPropertyChangeListener2() ::= <<
   public boolean addPropertyChangeListener(String propertyName, PropertyChangeListener listener)
   {
      if (this.listeners == null)
      {
         this.listeners = new PropertyChangeSupport(this);
      }
      this.listeners.addPropertyChangeListener(propertyName, listener);
      return true;
   }
>>

removePropertyChangeListener1() ::= <<
   public boolean removePropertyChangeListener(PropertyChangeListener listener)
   {
      if (this.listeners != null)
      {
         this.listeners.removePropertyChangeListener(listener);
      }
      return true;
   }
>>

removePropertyChangeListener2() ::= <<
   public boolean removePropertyChangeListener(String propertyName, PropertyChangeListener listener)
   {
      if (this.listeners != null)
      {
         this.listeners.removePropertyChangeListener(propertyName, listener);
      }
      return true;
   }
>>

firePropertyChange() ::= <<
   public boolean firePropertyChange(String propertyName, Object oldValue, Object newValue)
   {
      if (this.listeners != null)
      {
         this.listeners.firePropertyChange(propertyName, oldValue, newValue);
         return true;
      }
      return false;
   }
>>
